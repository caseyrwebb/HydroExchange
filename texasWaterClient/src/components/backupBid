import React, { Component, useState } from "react";
import axios from "axios";
import Paper from "@material-ui/core/Paper";
import ToggleButton from "@material-ui/lab/ToggleButton";
import ToggleButtonGroup from "@material-ui/lab/ToggleButtonGroup";
import { makeStyles } from "@material-ui/core/styles";
import { useDispatch } from "react-redux";
import { useSelector } from "react-redux";
import SellLogCard from "./SellLogCard";

const useStyles = makeStyles({
  container: {
    width: "100%",
    display: "flex",
    flexDirection: "column",
    alignItems: "center",
    marginTop: "10px",
  },
  toggleButton: {
    height: "20px",
    marginBottom: "40px",
  },
});

function BidModal({ visible, well }) {
  const [toggle, setToggle] = useState("bid");
  const [quantity, setQuantity] = useState(0);
  const [price, setPrice] = useState(529.71);
  const classes = useStyles();
  const dispatch = useDispatch();

  const user = useSelector((state) => state.user.user.email);

  const formatter = new Intl.NumberFormat("en-US", {
    style: "currency",
    currency: "USD",
    minimumFractionDigits: 2,
  });

  const handleToggle = (event, newToggle) => {
    setToggle(newToggle);
  };

  const handleBid = () => {
    const stakeData = {
      email: user,
      wellName: well.properties.full_name,
      quantity: quantity,
      price: price,
    };

    axios
      .post("http://localhost:9000/stake", stakeData)
      .then((res) => {
        console.log(res);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  const SellMarkup = Object.entries(well.stakes).map(([key, value]) => {
    return <SellLogCard stakeKey={key} stakeValues={value} />;
  });

  if (visible === true) {
    if (toggle === "bid") {
      return (
        <div className={classes.container}>
          <ToggleButtonGroup
            value={toggle}
            exclusive
            onChange={handleToggle}
            className={classes.toggleButton}
          >
            <ToggleButton value="bid">
              <p>Bid</p>
            </ToggleButton>
            <ToggleButton value="sell">
              <p>Sell</p>
            </ToggleButton>
          </ToggleButtonGroup>
          <h2>{well.properties.full_name}</h2>
          <p>{well.properties.conservation_storage.toLocaleString()} AF</p>
          <div
            style={{ display: "flex", flexDirection: "row", marginTop: "40px" }}
          >
            <p style={{ lineHeight: "10px", marginLeft: "10px" }}>Bid on: </p>
            <input
              type="number"
              id="quantity"
              name="quantity"
              value={quantity}
              min="1"
              max={well.properties.conservation_storage}
              style={{
                width: "200px",
                marginLeft: "10px",
                borderRadius: "16px",
                outline: "none",
              }}
              onChange={(event) => setQuantity(event.target.value)}
            />
          </div>
          <div
            style={{ display: "flex", flexDirection: "row", marginTop: "40px" }}
          >
            <p style={{ lineHeight: "10px", marginLeft: "10px" }}>$/AF: </p>
            <input
              type="number"
              id="price"
              name="price"
              value={price}
              min="1"
              style={{
                width: "200px",
                marginLeft: "17px",
                borderRadius: "16px",
                outline: "none",
              }}
              onChange={(event) => setPrice(event.target.value)}
            />
          </div>
          <h2 style={{ marginTop: "40px" }}>
            {formatter.format(price * quantity)}
          </h2>
          <button style={{ marginTop: "40px" }} onClick={handleBid()}>
            Submit
          </button>
        </div>
      );
    } else {
      return (
        <div className={classes.container}>
          <ToggleButtonGroup
            value={toggle}
            exclusive
            onChange={handleToggle}
            className={classes.toggleButton}
          >
            <ToggleButton value="bid">
              <p>Bid</p>
            </ToggleButton>
            <ToggleButton value="sell">
              <p>Sell</p>
            </ToggleButton>
          </ToggleButtonGroup>
          {SellMarkup}
        </div>
      );
    }
  } else {
    return null;
  }
}

export default BidModal;
